version: '3.8'

# Configuración optimizada para integración con n8n como API Gateway
# Basada en la documentación GitHub del usuario
# Red vps-net existente, servicios PostgreSQL, Redis, mxbai ya funcionando

services:
  # Aplicación principal Arca Tierra
  arca-tierra-app:
    build:
      context: .
      dockerfile: Dockerfile.n8n-integration
    container_name: arca-tierra-app
    restart: unless-stopped
    
    # Red existente del usuario
    networks:
      - vps-net
    
    # Variables de entorno para integración
    environment:
      # Configuración Next.js
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://arcatierra.dabychos.com/api
      - NEXT_PUBLIC_DOMAIN=arcatierra.dabychos.com
      
      # Integración con n8n Gateway
      - N8N_WEBHOOK_BASE_URL=http://n8n:5678/webhook/arca-tierra
      - N8N_INTERNAL_URL=http://n8n:5678
      
      # Base de datos existente del usuario
      - DATABASE_URL=postgresql://arca_user:HD8,UO0j\H-+ZHH05R&9@arca-postgres:5432/arca_tierra_db
      - POSTGRES_HOST=arca-postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=arca_tierra_db
      - POSTGRES_USER=arca_user
      - POSTGRES_PASSWORD=HD8,UO0j\H-+ZHH05R&9
      
      # Redis existente (integrado en n8n)
      - REDIS_URL=redis://n8n-redis:6379
      - REDIS_HOST=n8n-redis
      - REDIS_PORT=6379
      
      # Servicio mxbai existente
      - MXBAI_EMBED_URL=http://mxbai-embed-large:11434
      - EMBEDDING_MODEL=mxbai-embed-large
      
      # Configuración de seguridad
      - NEXTAUTH_URL=https://arcatierra.dabychos.com
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-change_this_in_production}
      - JWT_SECRET=${JWT_SECRET:-change_this_jwt_secret}
      
      # Configuración de aplicación
      - APP_NAME=Arca Tierra
      - APP_VERSION=1.0.0
      - LOG_LEVEL=info
      
    # Labels para Traefik (configuración existente del usuario)
    labels:
      # Habilitar Traefik
      - "traefik.enable=true"
      
      # Configuración del router principal
      - "traefik.http.routers.arca-tierra.rule=Host(`arcatierra.dabychos.com`)"
      - "traefik.http.routers.arca-tierra.entrypoints=websecure"
      - "traefik.http.routers.arca-tierra.tls=true"
      - "traefik.http.routers.arca-tierra.tls.certresolver=letsencrypt"
      
      # Configuración del servicio
      - "traefik.http.services.arca-tierra.loadbalancer.server.port=3000"
      
      # Middleware de seguridad
      - "traefik.http.routers.arca-tierra.middlewares=security-headers,rate-limit"
      
      # Headers de seguridad
      - "traefik.http.middlewares.security-headers.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.security-headers.headers.customrequestheaders.X-Forwarded-For="
      - "traefik.http.middlewares.security-headers.headers.sslredirect=true"
      - "traefik.http.middlewares.security-headers.headers.stsincludesubdomains=true"
      - "traefik.http.middlewares.security-headers.headers.stspreload=true"
      - "traefik.http.middlewares.security-headers.headers.stsseconds=31536000"
      
      # Rate limiting básico
      - "traefik.http.middlewares.rate-limit.ratelimit.average=100"
      - "traefik.http.middlewares.rate-limit.ratelimit.burst=50"
      
    # Healthcheck para monitoreo
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Dependencias (servicios que deben estar funcionando)
    depends_on:
      - arca-tierra-api
    
    # Volúmenes para logs y uploads
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - /etc/localtime:/etc/localtime:ro

  # API Backend para integración con n8n
  arca-tierra-api:
    build:
      context: ./api
      dockerfile: Dockerfile.n8n-integration
    container_name: arca-tierra-api
    restart: unless-stopped
    
    networks:
      - vps-net
    
    environment:
      # Configuración de la API
      - FLASK_ENV=production
      - FLASK_DEBUG=false
      - API_VERSION=v1
      
      # Base de datos
      - DATABASE_URL=postgresql://arca_user:HD8,UO0j\H-+ZHH05R&9@arca-postgres:5432/arca_tierra_db
      - POSTGRES_HOST=arca-postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=arca_tierra_db
      - POSTGRES_USER=arca_user
      - POSTGRES_PASSWORD=HD8,UO0j\H-+ZHH05R&9
      
      # Redis para caché
      - REDIS_URL=redis://n8n-redis:6379
      - REDIS_HOST=n8n-redis
      - REDIS_PORT=6379
      
      # Servicio de embeddings
      - MXBAI_EMBED_URL=http://mxbai-embed-large:11434
      - EMBEDDING_MODEL=mxbai-embed-large
      - EMBEDDING_DIMENSION=1536
      
      # Integración con n8n
      - N8N_WEBHOOK_BASE_URL=http://n8n:5678/webhook/arca-tierra
      - N8N_INTERNAL_URL=http://n8n:5678
      
      # Configuración de seguridad
      - JWT_SECRET=${JWT_SECRET:-change_this_jwt_secret}
      - API_KEY=${API_KEY:-arca_tierra_api_key_2024}
      
      # CORS para frontend
      - CORS_ORIGINS=https://arcatierra.dabychos.com,http://localhost:3000
      
    # Labels para Traefik (API endpoints)
    labels:
      - "traefik.enable=true"
      
      # Router para API
      - "traefik.http.routers.arca-tierra-api.rule=Host(`arcatierra.dabychos.com`) && PathPrefix(`/api`)"
      - "traefik.http.routers.arca-tierra-api.entrypoints=websecure"
      - "traefik.http.routers.arca-tierra-api.tls=true"
      - "traefik.http.routers.arca-tierra-api.tls.certresolver=letsencrypt"
      
      # Servicio API
      - "traefik.http.services.arca-tierra-api.loadbalancer.server.port=8000"
      
      # Middleware específico para API
      - "traefik.http.routers.arca-tierra-api.middlewares=api-headers,api-rate-limit"
      
      # Headers específicos para API
      - "traefik.http.middlewares.api-headers.headers.customrequestheaders.X-API-Gateway=n8n"
      - "traefik.http.middlewares.api-headers.headers.customrequestheaders.X-Service=arca-tierra-api"
      
      # Rate limiting más estricto para API
      - "traefik.http.middlewares.api-rate-limit.ratelimit.average=200"
      - "traefik.http.middlewares.api-rate-limit.ratelimit.burst=100"
    
    # Healthcheck para API
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    
    # Volúmenes para logs
    volumes:
      - ./api/logs:/app/logs
      - /etc/localtime:/etc/localtime:ro

# Red externa existente del usuario
networks:
  vps-net:
    external: true
    # Esta red ya existe y contiene:
    # - traefik (reverse proxy)
    # - n8n (API gateway)
    # - n8n-worker (queue processor)
    # - arca-postgres (base de datos)
    # - n8n-redis (redis para queue)
    # - mxbai-embed-large (embeddings IA)

# Volúmenes para persistencia
volumes:
  arca_tierra_logs:
    driver: local
  arca_tierra_uploads:
    driver: local

